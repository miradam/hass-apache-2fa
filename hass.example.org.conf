<IfModule mod_ssl.c>
	<VirtualHost *:443>
		ServerAdmin webmaster@localhost
		ServerName hass.example.org
		DocumentRoot /var/www/html

		ErrorLog ${APACHE_LOG_DIR}/error.log
		CustomLog ${APACHE_LOG_DIR}/access.log combined

		SSLEngine on

			#Lets Encrypt Certs
		SSLCertificateFile	/etc/letsencrypt/live/hass.example.org/fullchain.pem
		SSLCertificateKeyFile /etc/letsencrypt/live/hass.example.org/privkey.pem

			#set Ciphers & Protocol to make ssllabs.com testing happy
		SSLCipherSuite AES256+EECDH:AES256+EDH:!aNULL
		SSLHonorCipherOrder on
		SSLProtocol TLSv1.2

		ProxyPreserveHost On
		
			# Use different location than /auth since Home Assistant also uses this location!
		ScriptAlias "/auth2fa/" "/srv/html/apache_2fa/"

		RewriteEngine On
		
		#Rewrite Rule Section for 2-factor authentication via Google Authenticator with detail from https://github.com/itemir/apache_2fa
			# Check if 2FA cookie is set and store number in environment variable if true
		RewriteCond %{HTTP_COOKIE} ^.*2FA_Auth=([a-zA-Z0-9]+)
		RewriteRule .* -  [E=state_file:%1]
			
			# Not from Private Lan subnet
		RewriteCond %{REMOTE_ADDR} !192\.168\.1\..*
			# Not accessing Login Form
		RewriteCond %{REQUEST_URI} !/login/.*
			# Not accessing cgi 2FA program
		RewriteCond %{REQUEST_URI} !^/auth2fa/
			#Not accessing Home Assistant token (e.g. Google Assistant)
		RewriteCond %{REQUEST_URI} !^/auth/token
			# Not accessing Home Assistant Google Assistant API
		RewriteCond %{REQUEST_URI} !^/api/google_assistant
			# Valid 2FA cookie does not exist OR
			# Valid 2FA state file does not exist per environment variable
		RewriteCond %{HTTP_COOKIE} !^.*2FA_Auth=([a-zA-Z0-9]+)   [OR]
		RewriteCond /srv/html/apache_2fa/state/%{ENV:state_file} !-f
			# Redirect request through 2FA external program to generate cookie or state file and do not execute any more rules
		RewriteRule ^(.*)$ /auth2fa/auth?$1  [L,R=302]
		
		#Rewrite Rule Section for Home Assistant Websockets Reverse Proxy
			# Any WebSocket request
		RewriteCond %{HTTP:Upgrade} =websocket [NC]
			# Proxy to home assistant machine and do not execute any more rewrite rules
		RewriteRule /(.*)  ws://hass-box.home:8123/$1 [P,L]

		#Rewrite Rule Section for Home Assistant Reverse Proxy of Regular Requests
			# Not a WebSocket request
		RewriteCond %{HTTP:Upgrade} !=websocket [NC]
			# Not accessing proxied Grafana location
		RewriteCond %{REQUEST_URI} !^/grafana
			# Not accessing Mythweb installation
		RewriteCond %{REQUEST_URI} !^/mythweb
			# Not accessing Login Form
		RewriteCond %{REQUEST_URI} !^/login
			# Not accessing cgi 2FA program (cookie and state file already set if accessing externally....)
		RewriteCond %{REQUEST_URI} !^/auth2fa
			# Proxy to Home Assistant machine and do not execute any more rewrite rules
		RewriteRule /(.*)  http://hass-box.home:8123/$1 [NE,P,L]

		# Apply access restrictions to all locations by default
		<Location "/">
		   AuthType form
		   AuthFormProvider file
		   AuthName "private"
		   AuthUserFile /srv/html/apache_2fa/apache_credentials
		   AuthFormLoginRequiredLocation "https://hass.example.org/login/login.html"
			# FakeBasic Needed to allow cgi 2FA program to use Remote User
		   AuthFormFakeBasicAuth On
		   <RequireAny>
			Require valid-user
			Require ip 192.168.1
		   </RequireAny>
		   Session On
		   SessionMaxAge 14400
		   SessionCookieName "hass.example.org-session" path=/;httponly;secure;version=1;samesite=lax;
			# This should be changed!
		   SessionCryptoPassphrase pickasecretphrase
		</Location>
		
		# in this example installation, alias needed because login form files are not located under documentroot filesystem location
		Alias "/login" "/srv/html/login"
		<Location /login>  #Allow everyone to access login location (login form and handler)
		   Require all granted
		</Location>

		# Pointer to handler needed to complete login - see https://httpd.apache.org/docs/2.4/mod/mod_auth_form.html
		<Location "/login/dologin.html">
		   SetHandler form-login-handler
		   AuthFormLoginSuccessLocation "https://hass.example.org/"
		</Location>

		#allow access to /auth/token for Google ip addresses as well as valid users and local subnets
		<Location "/auth/token">
		   <RequireAny>
			Require valid-user
			Require ip 192.168.1
				#The following 3 ip subnets are the ones Google Assistant observed using in Apache Logs
			Require ip 64.233
			Require ip 66.102
			Require ip 66.249
		   </RequireAny>
		</Location>

    #allow access to /api/google_assistant for Google ip addresses as well as valid users and local subnet
		<Location "/api/google_assistant">
		   <RequireAny>
			Require valid-user
			Require ip 192.168.1
				#The following 3 ip subnets are the ones Google Assistant observed using in Apache Logs
			Require ip 64.233
			Require ip 66.102
			Require ip 66.249
		   </RequireAny>
		</Location>

		<Location /grafana>
		   ProxyPreserveHost On
			#in this example, grafana is running on same machine as apache
		   ProxyPass http://localhost:3000
		   ProxyPassReverse http://localhost:3000
		</Location>

		#default installation location for mythweb on Ubuntu, also under DocumentRoot as it is running on same machine as apache
		<Directory /var/www/html/mythweb>
		   DirectoryIndex mythweb.php
		</Directory>

	</VirtualHost>
</IfModule>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
